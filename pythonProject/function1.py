# 함수만들기

a = 1
b = 2
c = -8

# a*x + b*x + c = 0, a != 0인 x에 관한 2차 방정식에 대해, 근의 공식은

r1 = (-b + (b ** 2 - 4 * a * c) ** 0.5) / (2 * a)
r2 = (-b - (b ** 2 - 4 * a * c) ** 0.5) / (2 * a)

print('해는 {} 또는 {}'.format(r1, r2))
# ''.format(a, b) : format()함수의 인자값인 a, b가 ''에 중괄호{}로 대입됨

# 다른 값의 근의 공식을 한번 더 구하려면..
a = 2
b = -6
c = -8

r1 = (-b + (b ** 2 - 4 * a * c) ** 0.5) / (2 * a)
r2 = (-b - (b ** 2 - 4 * a * c) ** 0.5) / (2 * a)

print('해는 {} 또는 {}'.format(r1, r2))

print('-----------------------')

# 1. 반복되는 위의 코드를 블록으로 묶어 함수로 만듬
def print_sqrt():
    r1 = (-b + (b ** 2 - 4 * a * c) ** 0.5) / (2 * a)
    r2 = (-b - (b ** 2 - 4 * a * c) ** 0.5) / (2 * a)

    print('해는 {} 또는 {}'.format(r1, r2))

# 2. 원하는 값을 선언
a = 1
b = 2
c = -8

# 3. 연삭식 결과를 보여주는 함수 호출
print_sqrt()


# 다른 값의 근의 공식을 한번 더 구하려면..
# 2. 원하는 값을 선언
a = 2
b = -6
c = -8

# 3. 연삭식 결과를 보여주는 함수 호출
print_sqrt()
